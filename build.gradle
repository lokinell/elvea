buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
    }
}

allprojects {
    group = "cn.elvea"

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    ext {
        junitVersion = "4.12"

        tomcatVersion = "8.0.24"

        jacksonVersion = "2.6.0"
        log4j2Version = "2.3"
        jbossLoggingVersion = "3.3.0.Final"
        slf4jVersion = "1.7.12"
        guavaVersion = "18.0"
        sitemeshVersion = "3.0.1"
        jodatimeVersion = "2.8.1"
        ehcacheVersion = "2.10.0"
        mysqlVersion = "5.1.36"
        shiroVersion = "1.2.4"
        druidVersion = "1.0.15"
        mybatisVersion = "3.3.0"
        mybatisSpringVersion = "1.2.3"

        webjarsJqueryVersion = "2.1.4"
        webjarsBootstrapVersion = "3.3.5"
        webjarsFontAwesomeVersion = "4.3.0-4"

        commonsIoVersion = "2.4"
        commonsLangVersion = "3.4"
        commonsCodecVersion = "1.9"
        commonsFileuploadVersion = "1.3.1"
        commonsBeanutilsVersion = "1.9.2"

        springBootVersion = "1.2.5.RELEASE"
    }
}

project("spring") {
    description = "Gradle Spring Sample"
    version = "0.0.1"

    apply plugin: "idea"
    apply plugin: "java"
    apply plugin: 'spring-boot'
    apply plugin: "war"

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    springBoot {
        applyExcludeRules = false
    }

    configurations {
        providedRuntime

        compile.exclude module: 'spring-boot-starter-logging'
        compile.exclude module: 'commons-logging'
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web") {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        }
        compile("org.springframework.boot:spring-boot-starter-log4j2")
        compile("org.springframework.boot:spring-boot-starter-jdbc") {
            exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
        }

        // spring
        compile("org.springframework:spring-core") {
            exclude group: 'commons-logging', module: 'commons-logging'
        }
        compile("org.springframework:spring-context-support")

        // jackson
        compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
        compile("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
        compile("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")

        // logging
        compile("org.springframework.boot:spring-boot-starter-logging") {
            exclude group: 'ch.qos.logback', module: 'logback-classic'
        }

        compile("org.slf4j:slf4j-api:${slf4jVersion}")
        compile("org.slf4j:jcl-over-slf4j:${slf4jVersion}")
        compile("org.slf4j:jul-to-slf4j:${slf4jVersion}")

        compile("org.apache.logging.log4j:log4j-api:${log4j2Version}")
        compile("org.apache.logging.log4j:log4j-core:${log4j2Version}")
        compile("org.apache.logging.log4j:log4j-slf4j-impl:${log4j2Version}")
        compile("org.jboss.logging:jboss-logging:${jbossLoggingVersion}")

        // commons
        compile("org.apache.commons:commons-lang3:${commonsLangVersion}")
        compile("commons-fileupload:commons-fileupload:${commonsFileuploadVersion}")
        compile("commons-io:commons-io:${commonsIoVersion}")
        compile("commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}")
        compile("commons-codec:commons-codec:${commonsCodecVersion}")

        // third party
        compile("com.alibaba:druid:${druidVersion}")
        compile("org.sitemesh:sitemesh:${sitemeshVersion}")
        compile("com.google.guava:guava:${guavaVersion}")
        compile("net.sf.ehcache:ehcache:${ehcacheVersion}")
        compile("joda-time:joda-time:${jodatimeVersion}")
        compile("mysql:mysql-connector-java:${mysqlVersion}")
        compile("org.apache.shiro:shiro-core:${shiroVersion}")
        compile("org.apache.shiro:shiro-spring:${shiroVersion}")
        compile("org.apache.shiro:shiro-web:${shiroVersion}")
        compile("org.apache.shiro:shiro-ehcache:${shiroVersion}") {
            exclude group: 'net.sf.ehcache', module: 'ehcache-core'
        }
        compile("org.mybatis:mybatis:${mybatisVersion}")
        compile("org.mybatis:mybatis-spring:${mybatisSpringVersion}")

        // webjars
        compile("org.webjars:jquery:${webjarsJqueryVersion}")
        compile("org.webjars:bootstrap:${webjarsBootstrapVersion}")
        compile("org.webjars:font-awesome:${webjarsFontAwesomeVersion}")

        // javax
        compile("javax.servlet:jstl")
        compile("javax.servlet:javax.servlet-api")
        compile("javax.servlet.jsp:javax.servlet.jsp-api:2.3.0")

       
        providedRuntime("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}")
        providedRuntime("org.apache.tomcat.embed:tomcat-embed-el:${tomcatVersion}")
        providedRuntime("org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}")
        providedRuntime("org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}")
        providedRuntime("org.apache.tomcat.embed:tomcat-embed-websocket:${tomcatVersion}")
        providedRuntime("org.apache.tomcat:tomcat-jdbc:${tomcatVersion}")

        // test
        testCompile("org.springframework.boot:spring-boot-starter-test")
    }

}

